// <auto-generated />
using System;
using APIDotnetTraining;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIDotnetTraining.Migrations
{
    [DbContext(typeof(ApplicatioDbContext))]
    partial class ApplicatioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APIDotnetTraining.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<string>("Auther")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ReaderID")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("ReaderID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Auther = "auther 1",
                            BookTitle = "Book 1",
                            Description = "Book 1 description",
                            Version = 2
                        },
                        new
                        {
                            BookId = 2,
                            Auther = "auther 2",
                            BookTitle = "Book 2",
                            Description = "Book 2 description",
                            Version = 2
                        },
                        new
                        {
                            BookId = 3,
                            Auther = "auther 3",
                            BookTitle = "Book 3",
                            Description = "Book 3 description",
                            Version = 2
                        },
                        new
                        {
                            BookId = 4,
                            Auther = "auther 4",
                            BookTitle = "Book 4",
                            Description = "Book 4 description",
                            Version = 2
                        });
                });

            modelBuilder.Entity("APIDotnetTraining.Entities.Reader", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReaderID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReaderID");

                    b.ToTable("Readers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = 22,
                            BookId = 1,
                            Name = "reader 1"
                        },
                        new
                        {
                            ID = 2,
                            Age = 44,
                            BookId = 2,
                            Name = "reader 1"
                        });
                });

            modelBuilder.Entity("APIDotnetTraining.Entities.Book", b =>
                {
                    b.HasOne("APIDotnetTraining.Entities.Reader", null)
                        .WithMany("Books")
                        .HasForeignKey("ReaderID");
                });

            modelBuilder.Entity("APIDotnetTraining.Entities.Reader", b =>
                {
                    b.HasOne("APIDotnetTraining.Entities.Reader", null)
                        .WithMany()
                        .HasForeignKey("ReaderID");
                });

            modelBuilder.Entity("APIDotnetTraining.Entities.Reader", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
